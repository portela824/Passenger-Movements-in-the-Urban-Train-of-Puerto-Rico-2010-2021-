<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.23.1227.1336                               -->
<workbook original-version='18.1' source-build='2023.3.1 (20233.23.1227.1336)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='EntradaSalidas' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Salidas&quot;'>
        <calculation class='tableau' formula='&quot;Salidas&quot;' />
        <members>
          <member value='&quot;Salidas&quot;' />
        </members>
      </column>
      <column caption='Stations' datatype='string' name='[Variable Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total&quot;'>
        <calculation class='tableau' formula='&quot;Total&quot;' />
        <members>
          <member value='&quot;Bayamon&quot;' />
          <member value='&quot;Deportivo&quot;' />
          <member value='&quot;Jardines&quot;' />
          <member value='&quot;Torrimar&quot;' />
          <member value='&quot;Martinez_Nadal&quot;' />
          <member value='&quot;Las_Lomas&quot;' />
          <member value='&quot;San_Francisco&quot;' />
          <member value='&quot;Centro_Medico&quot;' />
          <member value='&quot;Cupey&quot;' />
          <member value='&quot;Rio_Piedras&quot;' />
          <member value='&quot;Universidad&quot;' />
          <member value='&quot;PiÃ±ero&quot;' />
          <member value='&quot;Domenech&quot;' />
          <member value='&quot;Roosevelt&quot;' />
          <member value='&quot;Hato_Rey&quot;' />
          <member value='&quot;Sagrado_Corazon&quot;' />
          <member value='&quot;Total&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='dataframeMethod' inline='true' name='federated.1vnfb3n19ymjuc1esvqp61e3tn35' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='dataframeMethod' name='textscan.018mect0c8j1d41h41ho50jeqlk5'>
            <connection class='textscan' directory='C:/Users/user/Desktop/IronHack/FinalProject/Transportacion-FinalProject-IronHack' filename='dataframeMethod.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.018mect0c8j1d41h41ho50jeqlk5' name='dataframeMethod.csv' table='[dataframeMethod#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='Month' ordinal='0' />
            <column datatype='string' name='variable' ordinal='1' />
            <column datatype='real' name='value' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.018mect0c8j1d41h41ho50jeqlk5' name='dataframeMethod.csv' table='[dataframeMethod#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='Month' ordinal='0' />
            <column datatype='string' name='variable' ordinal='1' />
            <column datatype='real' name='value' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[dataframeMethod.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[dataframeMethod.csv]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[dataframeMethod.csv_9301C5EE0F8342588643721D48AF4CC7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>variable</remote-name>
            <remote-type>129</remote-type>
            <local-name>[variable]</local-name>
            <parent-name>[dataframeMethod.csv]</parent-name>
            <remote-alias>variable</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[dataframeMethod.csv_9301C5EE0F8342588643721D48AF4CC7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[value]</local-name>
            <parent-name>[dataframeMethod.csv]</parent-name>
            <remote-alias>value</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[dataframeMethod.csv_9301C5EE0F8342588643721D48AF4CC7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='FilterStations' datatype='string' name='[Calculation_920704700974706688]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF CONTAINS([variable],[Parameters].[Variable Parameter]) THEN [variable] ELSE NULL END' />
      </column>
      <column caption='FilterEntradasSalidas' datatype='string' name='[FilterStations (copy)_920704700976033793]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF CONTAINS([variable],[Parameters].[Parameter 1]) THEN [variable] ELSE NULL END' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='dataframeMethod.csv' datatype='table' name='[__tableau_internal_object_id__].[dataframeMethod.csv_9301C5EE0F8342588643721D48AF4CC7]' role='measure' type='quantitative' />
      <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
      <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
      <column-instance column='[Calculation_920704700974706688]' derivation='None' name='[none:Calculation_920704700974706688:nk]' pivot='key' type='nominal' />
      <column-instance column='[FilterStations (copy)_920704700976033793]' derivation='None' name='[none:FilterStations (copy)_920704700976033793:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_920704700974706688:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;07_San_Francisco_Salidas&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;07_San_Francisco_entradas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Total_Salidas_&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;01_Bayamon_Salidas&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Total_entradas_&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;01_Bayamon_entradas&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_920704700974706688:nk]&#10;[none:Forecast Indicator:nk]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Total_entradas_&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>%null%</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Total_Salidas_&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[none:FilterStations (copy)_920704700976033793:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;09_Cupey_entradas&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;09_Cupey_Salidas&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;01_Bayamon_entradas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;05_Martinez_Nadal_entradas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;05_Martinez_Nadal_Salidas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;13_Domenech_entradas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;13_Domenech_Salidas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;10_Rio_Piedras_entradas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;10_Rio_Piedras_Salidas&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;06_Las_Lomas_entradas&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;06_Las_Lomas_Salidas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;02_Deportivo_Salidas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;02_Deportivo_entradas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Total_entradas_&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Total_Salidas_&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;07_San_Francisco_entradas&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;07_San_Francisco_Salidas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;14_Roosevelt_entradas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;14_Roosevelt_Salidas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;15_Hato_Rey_entradas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;15_Hato_Rey_Salidas&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;01_Bayamon_Salidas&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;03_Jardines_Salidas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;11_Universidad_entradas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;11_Universidad_Salidas&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;08_Centro_Medico_entradas&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;08_Centro_Medico_Salidas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;03_Jardines_entradas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;16_Sagrado_Corazon_entradas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;16_Sagrado_Corazon_Salidas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;12_PiÃ±ero_entradas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;12_PiÃ±ero_Salidas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;04_Torrimar_entradas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;04_Torrimar_Salidas&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Month' />
        <field-sort-custom-order field='variable' />
        <field-sort-custom-order field='Calculation_920704700974706688' />
        <field-sort-custom-order field='FilterStations (copy)_920704700976033793' />
        <field-sort-custom-order field='value' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='EntradaSalidas' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Salidas&quot;'>
          <calculation class='tableau' formula='&quot;Salidas&quot;' />
        </column>
        <column caption='Stations' datatype='string' name='[Variable Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total&quot;'>
          <calculation class='tableau' formula='&quot;Total&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='dataframeMethod.csv' id='dataframeMethod.csv_9301C5EE0F8342588643721D48AF4CC7'>
            <properties context=''>
              <relation connection='textscan.018mect0c8j1d41h41ho50jeqlk5' name='dataframeMethod.csv' table='[dataframeMethod#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='Month' ordinal='0' />
                  <column datatype='string' name='variable' ordinal='1' />
                  <column datatype='real' name='value' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='.'>
      <table>
        <view>
          <datasources>
            <datasource caption='dataframeMethod' name='federated.1vnfb3n19ymjuc1esvqp61e3tn35' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='EntradaSalidas' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Salidas&quot;'>
              <calculation class='tableau' formula='&quot;Salidas&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1vnfb3n19ymjuc1esvqp61e3tn35'>
            <column caption='FilterEntradasSalidas' datatype='string' name='[FilterStations (copy)_920704700976033793]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([variable],[Parameters].[Parameter 1]) THEN [variable] ELSE NULL END' />
            </column>
            <column datatype='date' name='[Month]' role='dimension' type='ordinal' />
            <column-instance column='[value]' derivation='Sum' forecast-column-base='[sum:value:qk]' forecast-column-type='forecast-value' name='[fVal:sum:value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[FilterStations (copy)_920704700976033793]' derivation='None' name='[none:FilterStations (copy)_920704700976033793:nk]' pivot='key' type='nominal' />
            <column-instance column='[variable]' derivation='None' name='[none:variable:nk]' pivot='key' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
            <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
            <column-instance column='[Month]' derivation='Year' name='[yr:Month:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vnfb3n19ymjuc1esvqp61e3tn35].[none:FilterStations (copy)_920704700976033793:nk]' context='true'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:FilterStations (copy)_920704700976033793:nk]' />
              <groupfilter function='member' level='[none:FilterStations (copy)_920704700976033793:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1vnfb3n19ymjuc1esvqp61e3tn35].[none:variable:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:variable:nk]' />
              <groupfilter function='member' level='[none:variable:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1vnfb3n19ymjuc1esvqp61e3tn35].[none:FilterStations (copy)_920704700976033793:nk]</column>
            <column>[federated.1vnfb3n19ymjuc1esvqp61e3tn35].[none:variable:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vnfb3n19ymjuc1esvqp61e3tn35].[none:FilterStations (copy)_920704700976033793:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1vnfb3n19ymjuc1esvqp61e3tn35].[fVal:sum:value:qk]</rows>
        <cols>[federated.1vnfb3n19ymjuc1esvqp61e3tn35].[yr:Month:ok]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{F567C47C-479C-4F7E-A844-AF76164D3786}' />
    </worksheet>
    <worksheet name='Forecast: Total Entries'>
      <table>
        <view>
          <datasources>
            <datasource caption='dataframeMethod' name='federated.1vnfb3n19ymjuc1esvqp61e3tn35' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='EntradaSalidas' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Salidas&quot;'>
              <calculation class='tableau' formula='&quot;Salidas&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1vnfb3n19ymjuc1esvqp61e3tn35'>
            <column caption='FilterEntradasSalidas' datatype='string' name='[FilterStations (copy)_920704700976033793]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([variable],[Parameters].[Parameter 1]) THEN [variable] ELSE NULL END' />
            </column>
            <column datatype='date' name='[Month]' role='dimension' type='ordinal' />
            <column-instance column='[value]' derivation='Sum' forecast-column-base='[sum:value:qk]' forecast-column-type='forecast-value' name='[fVal:sum:value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[FilterStations (copy)_920704700976033793]' derivation='None' name='[none:FilterStations (copy)_920704700976033793:nk]' pivot='key' type='nominal' />
            <column-instance column='[variable]' derivation='None' name='[none:variable:nk]' pivot='key' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
            <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
            <column-instance column='[Month]' derivation='Year' name='[yr:Month:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vnfb3n19ymjuc1esvqp61e3tn35].[none:FilterStations (copy)_920704700976033793:nk]' context='true'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:FilterStations (copy)_920704700976033793:nk]' />
              <groupfilter function='member' level='[none:FilterStations (copy)_920704700976033793:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1vnfb3n19ymjuc1esvqp61e3tn35].[none:variable:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:variable:nk]' />
              <groupfilter function='member' level='[none:variable:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1vnfb3n19ymjuc1esvqp61e3tn35].[none:FilterStations (copy)_920704700976033793:nk]</column>
            <column>[federated.1vnfb3n19ymjuc1esvqp61e3tn35].[none:variable:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vnfb3n19ymjuc1esvqp61e3tn35].[none:FilterStations (copy)_920704700976033793:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1vnfb3n19ymjuc1esvqp61e3tn35].[fVal:sum:value:qk]</rows>
        <cols>[federated.1vnfb3n19ymjuc1esvqp61e3tn35].[yr:Month:ok]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{0FB3F2B8-E8BD-4983-B17B-C846C3F431A7}' />
    </worksheet>
    <worksheet name='Forecast: Total Entries vs Total Exist'>
      <table>
        <view>
          <datasources>
            <datasource caption='dataframeMethod' name='federated.1vnfb3n19ymjuc1esvqp61e3tn35' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Stations' datatype='string' name='[Variable Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total&quot;'>
              <calculation class='tableau' formula='&quot;Total&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1vnfb3n19ymjuc1esvqp61e3tn35'>
            <column caption='FilterStations' datatype='string' name='[Calculation_920704700974706688]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([variable],[Parameters].[Variable Parameter]) THEN [variable] ELSE NULL END' />
            </column>
            <column datatype='date' name='[Month]' role='dimension' type='ordinal' />
            <column-instance column='[value]' derivation='Sum' forecast-column-base='[sum:value:qk]' forecast-column-type='forecast-value' name='[fVal:sum:value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_920704700974706688]' derivation='None' name='[none:Calculation_920704700974706688:nk]' pivot='key' type='nominal' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
            <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
            <column-instance column='[Month]' derivation='Year' name='[yr:Month:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vnfb3n19ymjuc1esvqp61e3tn35].[none:Calculation_920704700974706688:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_920704700974706688:nk]' />
              <groupfilter function='member' level='[none:Calculation_920704700974706688:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1vnfb3n19ymjuc1esvqp61e3tn35].[none:Calculation_920704700974706688:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vnfb3n19ymjuc1esvqp61e3tn35].[none:Calculation_920704700974706688:nk]' />
              <color column='[federated.1vnfb3n19ymjuc1esvqp61e3tn35].[none:Forecast Indicator:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1vnfb3n19ymjuc1esvqp61e3tn35].[fVal:sum:value:qk]</rows>
        <cols>[federated.1vnfb3n19ymjuc1esvqp61e3tn35].[yr:Month:ok]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{053DB48A-3BE1-478B-AA46-2DD5492C83C6}' />
    </worksheet>
    <worksheet name='Forecast: Total Exits'>
      <table>
        <view>
          <datasources>
            <datasource caption='dataframeMethod' name='federated.1vnfb3n19ymjuc1esvqp61e3tn35' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='EntradaSalidas' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Salidas&quot;'>
              <calculation class='tableau' formula='&quot;Salidas&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1vnfb3n19ymjuc1esvqp61e3tn35'>
            <column caption='FilterEntradasSalidas' datatype='string' name='[FilterStations (copy)_920704700976033793]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([variable],[Parameters].[Parameter 1]) THEN [variable] ELSE NULL END' />
            </column>
            <column datatype='date' name='[Month]' role='dimension' type='ordinal' />
            <column-instance column='[value]' derivation='Sum' forecast-column-base='[sum:value:qk]' forecast-column-type='forecast-value' name='[fVal:sum:value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[FilterStations (copy)_920704700976033793]' derivation='None' name='[none:FilterStations (copy)_920704700976033793:nk]' pivot='key' type='nominal' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[variable]' derivation='None' name='[none:variable:nk]' pivot='key' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
            <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
            <column-instance column='[Month]' derivation='Year' name='[yr:Month:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vnfb3n19ymjuc1esvqp61e3tn35].[none:FilterStations (copy)_920704700976033793:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:FilterStations (copy)_920704700976033793:nk]' />
              <groupfilter function='member' level='[none:FilterStations (copy)_920704700976033793:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1vnfb3n19ymjuc1esvqp61e3tn35].[none:variable:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:variable:nk]' member='&quot;01_Bayamon_Salidas&quot;' />
              <groupfilter function='member' level='[none:variable:nk]' member='&quot;02_Deportivo_Salidas&quot;' />
              <groupfilter function='member' level='[none:variable:nk]' member='&quot;03_Jardines_Salidas&quot;' />
              <groupfilter function='member' level='[none:variable:nk]' member='&quot;04_Torrimar_Salidas&quot;' />
              <groupfilter function='member' level='[none:variable:nk]' member='&quot;05_Martinez_Nadal_Salidas&quot;' />
              <groupfilter function='member' level='[none:variable:nk]' member='&quot;06_Las_Lomas_Salidas&quot;' />
              <groupfilter function='member' level='[none:variable:nk]' member='&quot;07_San_Francisco_Salidas&quot;' />
              <groupfilter function='member' level='[none:variable:nk]' member='&quot;08_Centro_Medico_Salidas&quot;' />
              <groupfilter function='member' level='[none:variable:nk]' member='&quot;09_Cupey_Salidas&quot;' />
              <groupfilter function='member' level='[none:variable:nk]' member='&quot;10_Rio_Piedras_Salidas&quot;' />
              <groupfilter function='member' level='[none:variable:nk]' member='&quot;11_Universidad_Salidas&quot;' />
              <groupfilter function='member' level='[none:variable:nk]' member='&quot;12_PiÃ±ero_Salidas&quot;' />
              <groupfilter function='member' level='[none:variable:nk]' member='&quot;13_Domenech_Salidas&quot;' />
              <groupfilter function='member' level='[none:variable:nk]' member='&quot;14_Roosevelt_Salidas&quot;' />
              <groupfilter function='member' level='[none:variable:nk]' member='&quot;15_Hato_Rey_Salidas&quot;' />
              <groupfilter function='member' level='[none:variable:nk]' member='&quot;16_Sagrado_Corazon_Salidas&quot;' />
              <groupfilter function='member' level='[none:variable:nk]' member='&quot;Total_Salidas_&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1vnfb3n19ymjuc1esvqp61e3tn35].[none:variable:nk]</column>
            <column>[federated.1vnfb3n19ymjuc1esvqp61e3tn35].[none:FilterStations (copy)_920704700976033793:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vnfb3n19ymjuc1esvqp61e3tn35].[none:FilterStations (copy)_920704700976033793:nk]' />
              <color column='[federated.1vnfb3n19ymjuc1esvqp61e3tn35].[none:Forecast Indicator:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1vnfb3n19ymjuc1esvqp61e3tn35].[fVal:sum:value:qk]</rows>
        <cols>[federated.1vnfb3n19ymjuc1esvqp61e3tn35].[yr:Month:ok]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{5F0F01A1-4D51-4DBE-808B-A1534ADF605F}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Forecast Analysis'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='22'>Forecast Analysis</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='dataframeMethod' name='federated.1vnfb3n19ymjuc1esvqp61e3tn35' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='EntradaSalidas' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Salidas&quot;'>
          <calculation class='tableau' formula='&quot;Salidas&quot;' />
          <members>
            <member value='&quot;Salidas&quot;' />
          </members>
        </column>
        <column caption='Stations' datatype='string' name='[Variable Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total&quot;'>
          <calculation class='tableau' formula='&quot;Total&quot;' />
          <members>
            <member value='&quot;Bayamon&quot;' />
            <member value='&quot;Deportivo&quot;' />
            <member value='&quot;Jardines&quot;' />
            <member value='&quot;Torrimar&quot;' />
            <member value='&quot;Martinez_Nadal&quot;' />
            <member value='&quot;Las_Lomas&quot;' />
            <member value='&quot;San_Francisco&quot;' />
            <member value='&quot;Centro_Medico&quot;' />
            <member value='&quot;Cupey&quot;' />
            <member value='&quot;Rio_Piedras&quot;' />
            <member value='&quot;Universidad&quot;' />
            <member value='&quot;PiÃ±ero&quot;' />
            <member value='&quot;Domenech&quot;' />
            <member value='&quot;Roosevelt&quot;' />
            <member value='&quot;Hato_Rey&quot;' />
            <member value='&quot;Sagrado_Corazon&quot;' />
            <member value='&quot;Total&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1vnfb3n19ymjuc1esvqp61e3tn35'>
        <column-instance column='[variable]' derivation='None' name='[none:variable:nk]' pivot='key' type='nominal' />
        <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='24' param='vert' type-v2='layout-flow' w='98828' x='586' y='1042'>
            <zone h='7683' id='25' type-v2='title' w='98828' x='586' y='1042'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='90233' id='18' param='vert' type-v2='layout-flow' w='98828' x='586' y='8725'>
              <zone h='90233' id='16' type-v2='layout-basic' w='98828' x='586' y='8725'>
                <zone h='40674' id='7' param='horz' type-v2='layout-flow' w='98828' x='586' y='8725'>
                  <zone h='40674' id='5' type-v2='layout-basic' w='93704' x='586' y='8725'>
                    <zone h='40674' id='3' name='Forecast: Total Entries vs Total Exist' w='93704' x='586' y='8725'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                  <zone fixed-size='70' h='40674' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='5124' x='94290' y='8725'>
                    <zone fixed-size='32' h='5209' id='8' is-fixed='true' name='Forecast: Total Entries vs Total Exist' pane-specification-id='0' param='[federated.1vnfb3n19ymjuc1esvqp61e3tn35].[none:Calculation_920704700974706688:nk]&#10;[federated.1vnfb3n19ymjuc1esvqp61e3tn35].[none:Forecast Indicator:nk]' type-v2='color' w='5124' x='94290' y='8725'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='7292' id='9' mode='compact' param='[Parameters].[Variable Parameter]' type-v2='paramctrl' w='5124' x='94290' y='13934'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone fixed-size='39' h='6120' id='12' is-fixed='true' name='Forecast: Total Entries' pane-specification-id='0' param='[federated.1vnfb3n19ymjuc1esvqp61e3tn35].[none:FilterStations (copy)_920704700976033793:nk]' type-v2='color' w='5124' x='94290' y='21226'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone fixed-size='53' h='7943' id='13' is-fixed='true' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='5124' x='94290' y='27346'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='14110' id='15' name='Forecast: Total Exits' param='[federated.1vnfb3n19ymjuc1esvqp61e3tn35].[none:variable:nk]' type-v2='filter' w='5124' x='94290' y='35289'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
                <zone h='49559' id='14' name='Forecast: Total Exits' w='49414' x='586' y='49399'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49559' id='10' name='Forecast: Total Entries' w='49414' x='50000' y='49399'>
                  <layout-cache cell-count-w='13' minheight='195' non-cell-size-w='82' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1' fontsize='22'>Forecast Analysis</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1300' minheight='1300' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='29' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97916' id='28' param='vert' type-v2='layout-flow' w='98828' x='586' y='1042'>
                <zone h='7683' id='25' type-v2='title' w='98828' x='586' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40674' id='3' is-fixed='true' name='Forecast: Total Entries vs Total Exist' w='93704' x='586' y='8725'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='32' h='5209' id='8' name='Forecast: Total Entries vs Total Exist' pane-specification-id='0' param='[federated.1vnfb3n19ymjuc1esvqp61e3tn35].[none:Calculation_920704700974706688:nk]&#10;[federated.1vnfb3n19ymjuc1esvqp61e3tn35].[none:Forecast Indicator:nk]' type-v2='color' w='5124' x='94290' y='8725'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7292' id='9' mode='compact' param='[Parameters].[Variable Parameter]' type-v2='paramctrl' w='5124' x='94290' y='13934'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='53' h='7943' id='13' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='5124' x='94290' y='27346'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='14110' id='15' mode='checkdropdown' name='Forecast: Total Exits' param='[federated.1vnfb3n19ymjuc1esvqp61e3tn35].[none:variable:nk]' type-v2='filter' w='5124' x='94290' y='35289'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49559' id='14' is-fixed='true' name='Forecast: Total Exits' w='49414' x='586' y='49399'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49559' id='10' is-fixed='true' name='Forecast: Total Entries' w='49414' x='50000' y='49399'>
                  <layout-cache cell-count-w='13' minheight='195' non-cell-size-w='82' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='39' h='6120' id='12' name='Forecast: Total Entries' pane-specification-id='0' param='[federated.1vnfb3n19ymjuc1esvqp61e3tn35].[none:FilterStations (copy)_920704700976033793:nk]' type-v2='color' w='5124' x='94290' y='21226'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{EB8CFD66-7AD7-4B7B-88D4-FF8CFA171C4E}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Forecast: Total Entries vs Total Exist'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Variable Parameter]' type='parameter' />
            <card pane-specification-id='0' param='[federated.1vnfb3n19ymjuc1esvqp61e3tn35].[none:Calculation_920704700974706688:nk]&#10;[federated.1vnfb3n19ymjuc1esvqp61e3tn35].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vnfb3n19ymjuc1esvqp61e3tn35].[none:Calculation_920704700974706688:nk]</field>
            <field>[federated.1vnfb3n19ymjuc1esvqp61e3tn35].[none:Forecast Indicator:nk]</field>
            <field>[federated.1vnfb3n19ymjuc1esvqp61e3tn35].[yr:Month:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9C25792A-A2D7-470B-8768-16418D5CEB55}' />
    </window>
    <window class='worksheet' name='Forecast: Total Entries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1vnfb3n19ymjuc1esvqp61e3tn35].[none:variable:nk]' type='filter' values='context' />
            <card pane-specification-id='0' param='[federated.1vnfb3n19ymjuc1esvqp61e3tn35].[none:FilterStations (copy)_920704700976033793:nk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vnfb3n19ymjuc1esvqp61e3tn35].[none:FilterStations (copy)_920704700976033793:nk]</field>
            <field>[federated.1vnfb3n19ymjuc1esvqp61e3tn35].[none:variable:nk]</field>
            <field>[federated.1vnfb3n19ymjuc1esvqp61e3tn35].[yr:Month:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F2C29C9F-FD15-45FA-9D71-188FD5C265A1}' />
    </window>
    <window class='worksheet' name='.'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1vnfb3n19ymjuc1esvqp61e3tn35].[none:variable:nk]' type='filter' values='context' />
            <card pane-specification-id='0' param='[federated.1vnfb3n19ymjuc1esvqp61e3tn35].[none:FilterStations (copy)_920704700976033793:nk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vnfb3n19ymjuc1esvqp61e3tn35].[none:FilterStations (copy)_920704700976033793:nk]</field>
            <field>[federated.1vnfb3n19ymjuc1esvqp61e3tn35].[none:variable:nk]</field>
            <field>[federated.1vnfb3n19ymjuc1esvqp61e3tn35].[yr:Month:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8F353E49-8A75-45E4-BD3C-1DCE355488F9}' />
    </window>
    <window class='dashboard' maximized='true' name='Forecast Analysis'>
      <viewpoints>
        <viewpoint name='Forecast: Total Entries'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Forecast: Total Entries vs Total Exist'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1vnfb3n19ymjuc1esvqp61e3tn35].[none:Calculation_920704700974706688:nk]</field>
              <field>[federated.1vnfb3n19ymjuc1esvqp61e3tn35].[none:Forecast Indicator:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Forecast: Total Exits'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{358CDB6C-C200-42C3-A38F-263C2C7FAF5B}' />
    </window>
    <window class='worksheet' name='Forecast: Total Exits'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1vnfb3n19ymjuc1esvqp61e3tn35].[none:variable:nk]' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.1vnfb3n19ymjuc1esvqp61e3tn35].[none:FilterStations (copy)_920704700976033793:nk]&#10;[federated.1vnfb3n19ymjuc1esvqp61e3tn35].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vnfb3n19ymjuc1esvqp61e3tn35].[none:FilterStations (copy)_920704700976033793:nk]</field>
            <field>[federated.1vnfb3n19ymjuc1esvqp61e3tn35].[none:Forecast Indicator:nk]</field>
            <field>[federated.1vnfb3n19ymjuc1esvqp61e3tn35].[none:variable:nk]</field>
            <field>[federated.1vnfb3n19ymjuc1esvqp61e3tn35].[yr:Month:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DE210DD6-0546-4B38-888C-4092CF84B805}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='.' width='192'>
      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
      /H9Natl4l5bAyAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Forecast Analysis' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Forecast: Total Entries' width='192'>
      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
      /H9Natl4l5bAyAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Forecast: Total Entries vs Total Exist' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Forecast: Total Exits' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
